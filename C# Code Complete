using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.Reporting.WinForms;
using System.IO;
namespace WindowsReportForm1
{
    public partial class MasterForm : Form
    {
        // Define the connection string based on the selected username  (please note these are dummary server and dummy username and password for this video purpose
        // you modify to your requirements
        string connectionString = @"Server=MYLAPTOP\SQLEXPRESS;Database=PerformanceDB;User Id=hi;Password=admin;";

        public MasterForm()
        {
            InitializeComponent();
            PopulateStateComboBox();
        }

        private void MasterForm_Load(object sender, EventArgs e)
        {
            ReportProcessing();

        }

        private void PopulateStateComboBox()
        {
            // Clear existing items
            StateNameCbx.Items.Clear();

            // Add "ALL STATES" option
            StateNameCbx.Items.Add("ALL STATES");

            try
            {
                // Connect to the database
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    // Open the connection
                    connection.Open();

                    string query = "SELECT DISTINCT(State_Name) FROM [PerformanceDB].[dbo].[MonthlyResultsTbl] ORDER BY State_Name";

                    // Create a command object
                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        // Execute the command and read data
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                // Add State_Name to the ComboBox
                                StateNameCbx.Items.Add(reader["State_Name"].ToString());
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
            }

            // Set "ALL STATE" as the default selected item
            StateNameCbx.SelectedItem = "ALL STATES";
        }



        private void ReportProcessing()
        {
            string mstatename = StateNameCbx.Text;

            reportViewer1.ProcessingMode = ProcessingMode.Local;
            reportViewer1.LocalReport.ReportPath = @"C:\Users\Ganapathy\source\repos\WindowsReportForm1\WindowsReportForm1\PerformanceReport.rdlc";

            string query = "SELECT " +
                           " Fyear, " +
                           " FyearName, " +
                           " Month_Year, " +
                           " SUM(Revenue_Amt) AS Revenue_Amt, " +
                           " SUM(Net_Result) AS Net_Result " +
                           " FROM PerformanceDB.dbo.fn_MonthlyPerformanceData() ";

            if (mstatename != "ALL STATES")
            {
                query += " WHERE State_Name = @StateName ";
            }

            query += " GROUP BY Fyear, FyearName, Month_Year";

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    SqlCommand command = new SqlCommand(query, connection);
                    if (mstatename != "ALL STATES")
                    {
                        command.Parameters.AddWithValue("@StateName", mstatename);
                    }

                    SqlDataAdapter dataAdapter = new SqlDataAdapter(command);
                    DataSet dataSet = new DataSet();
                    dataAdapter.Fill(dataSet, "MonthlyResultsTbl");

                    DataTable dataTable = dataSet.Tables["MonthlyResultsTbl"];

                    ReportDataSource reportDataSource = new ReportDataSource("ds_FinancialReport", dataTable);
                    reportViewer1.LocalReport.DataSources.Clear(); // Clear any existing data sources
                    reportViewer1.LocalReport.DataSources.Add(reportDataSource);

                    // Add parameters to the report
                    ReportParameter[] reportParameters = new ReportParameter[]
                    {
                        new ReportParameter("pm_statename", mstatename)
                    };
                    reportViewer1.LocalReport.SetParameters(reportParameters);

                }
            }
            catch (InvalidCastException ex)
            {
                MessageBox.Show($"Error in data conversion: {ex.Message}");
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error loading report: {ex.Message}");
            }

            try
            {
                reportViewer1.RefreshReport();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error loading report: " + ex.Message);
            }
        }

        private void StateNameCbx_SelectedIndexChanged(object sender, EventArgs e)
        {
            ReportProcessing();
        }
    }
}
